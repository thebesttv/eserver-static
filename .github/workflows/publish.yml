name: Publish to GitHub Pages

on:
  schedule:
    - cron: '33 18 * * *'       # UTC 18:33 => UTC+8 2:33
  push:
    branches:
      - '*'                     # run on all branches
  workflow_dispatch:

jobs:
  Generate-target:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Emacs packages
        id: cache-emacs
        uses: actions/cache@v3
        with:
          path: |
            ~/.emacs
            ~/.emacs.d
          key: ${{ runner.os }}-emacs

      - name: Install Emacs
        run: |
          sudo snap install emacs --classic
          emacs --version | head -n1
      - name: Set time-zone to ShangHai
        run: |
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          date
          emacs -Q --batch --eval "(print (current-time-zone))"
          emacs -Q --batch --eval "(print (current-time-string))"

      - name: Checkout repo (full history)
        uses: actions/checkout@v3
        with:
          # from https://github.com/marketplace/actions/git-restore-mtime
          # git-restore-mtime uses the ref log to find the correct
          # timestamp for each file.  This requires a full git history.
          # The default value (1) creates a shallow checkout.
          fetch-depth: 0
      - name: Prepare git-restore-mtime
        env:
          url: https://raw.githubusercontent.com/MestreLion/git-tools/main/git-restore-mtime
          bin: /bin/git-restore-mtime
        run: |
          sudo wget -q ${{ env.url }} -o ${{ env.bin }}
          sudo chmod +x ${{ env.bin }}
      - name: Restore mtime
        run: |
          git restore-mtime
          ls -alhF
          ls -alhF blog

      - name: Generate Diagram
        uses: githubocto/repo-visualizer@main
        with:
          output_file: "diagram.svg"
          excluded_paths: ".github,.gitignore"
          should_push: false           # do not push, instead,
          artifact_name: 'diagram-svg' # generate an artifact

      - name: Publish
        run: make publish
        env:
          ELPA_SRC: no_mirror
      - name: List current repo
        run: |
          ls -alhF

      - name: Generate pagefind
        run: make pagefind

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'          # cache pip dependencies
      - name: Install Python packages
        run: |
          pip install beautifulsoup4
      - name: Verify target
        run: |
          make verify
      - name: Upload target
        uses: actions/upload-artifact@v3
        with:
          name: target-dir
          path: target

  Publish-target:
    runs-on: ubuntu-latest
    needs: Generate-target
    if: github.ref == 'refs/heads/main' # only publish when we are on main branch
    steps:
      - name: Download target
        uses: actions/download-artifact@v3
        with:
          name: target-dir
          path: target
      - name: Download diagram
        uses: actions/download-artifact@v3
        with:
          name: diagram-svg
          path: target
      - name: Remove background of diagram
        run: |
          sed -i "s/background:white;//" target/diagram.svg
      - name: Bypass Jekyll processing
        # bypass Jekyll processing, so files or directories that start
        # with underscores are allowed, see
        # https://github.blog/2009-12-29-bypassing-jekyll-on-github-pages/
        run: |
          touch target/.nojekyll

      - name: List target directory
        run: |
          ls -alhF target/
      - name: Pushes to GitHub Pages
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: 'target'
          destination-github-username: 'thebesttv'
          destination-repository-name: 'thebesttv.github.io'
          user-email: taojuntian@outlook.com
          target-branch: main
